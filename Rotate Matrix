import java.util.ArrayList;

public class Solution {
    public static void rotateMatrix(ArrayList<ArrayList<Integer>> mat, int n, int m) {
        if (mat == null || mat.isEmpty()) {
            return;
        }

        int topRow = 0;
        int bottomRow = n - 1;
        int leftCol = 0;
        int rightCol = m - 1;

        while (topRow < bottomRow && leftCol < rightCol) {
            int prev = mat.get(topRow + 1).get(leftCol);

            // Move elements of top row from left to right
            for (int i = leftCol; i <= rightCol; i++) {
                int current = mat.get(topRow).get(i);
                mat.get(topRow).set(i, prev);
                prev = current;
            }
            topRow++;

            // Move elements of right column from top to bottom
            for (int i = topRow; i <= bottomRow; i++) {
                int current = mat.get(i).get(rightCol);
                mat.get(i).set(rightCol, prev);
                prev = current;
            }
            rightCol--;

            // Move elements of bottom row from right to left
            for (int i = rightCol; i >= leftCol; i--) {
                int current = mat.get(bottomRow).get(i);
                mat.get(bottomRow).set(i, prev);
                prev = current;
            }
            bottomRow--;

            // Move elements of left column from bottom to top
            for (int i = bottomRow; i >= topRow; i--) {
                int current = mat.get(i).get(leftCol);
                mat.get(i).set(leftCol, prev);
                prev = current;
            }
            leftCol++;
        }
    }
}
