import java.util.ArrayList;
import java.util.List;

public class Solution {
    public static List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        List<String> res = new ArrayList<>();
        fun(0, s, res, ans);
        return ans;
    }

    private static void fun(int idx, String s, List<String> res, List<List<String>> ans) {
        if (idx == s.length()) {
            ans.add(new ArrayList<>(res));
        }
        for (int i = idx; i < s.length(); i++) {
            if (isPalindrome(s, idx, i)) {
                res.add(s.substring(idx, i + 1));
                fun(i + 1, s, res, ans);
                res.remove(res.size() - 1);
            }
        }
    }

    private static boolean isPalindrome(String s, int start, int end) {
        while (start <= end) {
            if (s.charAt(start++) != s.charAt(end--)) {
                return false;
            }
        }
        return true;
    }
}
