import java.io.*;
import java.util.* ;

/*************************************************************

    Following is the LinkedListNode class structure

    class LinkedListNode<T> {
	    T data;
	    LinkedListNode<T> next;
	    LinkedListNode<T> random;

	    public LinkedListNode(T data) {
		    this.data = data;
	    }
    }

*************************************************************/

public class Solution {
	public static LinkedListNode<Integer> cloneRandomList(LinkedListNode<Integer> head) {
		// Write your code here.
		if (head == null) {
            return null;
        }
        
        // Step 1: Create a copy of each node and insert it after the original node
        LinkedListNode<Integer> current = head;
        while (current != null) {
            LinkedListNode<Integer> newNode = new LinkedListNode<>(current.data);
            newNode.next = current.next;
            current.next = newNode;
            current = newNode.next;
        }
        
        // Step 2: Update the random pointers of the copied nodes
        current = head;
        while (current != null) {
            if (current.random != null) {
                current.next.random = current.random.next;
            }
            current = current.next.next;
        }
        
        // Step 3: Separate the original and copied lists
        LinkedListNode<Integer> newHead = head.next;
        current = head;
        LinkedListNode<Integer> newCurrent = newHead;
        while (current != null) {
            current.next = current.next.next;
            if (newCurrent.next != null) {
                newCurrent.next = newCurrent.next.next;
            }
            current = current.next;
            newCurrent = newCurrent.next;
        }
        
        return newHead;
  
	}
}
